<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2013 LogonBox Limited. All rights reserved. This program 
	and the accompanying materials are made available under the terms of the 
	GNU Public License v3.0 which accompanies this distribution, and is available 
	at http://www.gnu.org/licenses/gpl.html -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<bean id="propertyConfigurer"
		class="com.hypersocket.util.OverridePropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:default-database.properties</value>
				<value>file:///${user.dir}/conf/database.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.hypersocket.util.ConfigurableComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver.className}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="3" />
		<property name="minPoolSize" value="1" />
		<property name="initialPoolSize" value="5" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize:500}" />
		<property name="maxStatementsPerConnection" value="${jdbc.maxStatementsPerConnection:100}" />
		<property name="automaticTestTable" value="c3p0_test_table" />
		<property name="numHelperThreads" value="${jdbc.numHelperThreads:0}" />
		<property name="testConnectionOnCheckout" value="true" />
		<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay:1000}" />
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts:10}" />
	</bean>
    
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="sessionFactory" class="com.hypersocket.util.HypersocketAnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="regionFactory" ref="regionFactory" />
		<property name="databaseInformation" ref="databaseInformation" />
		<property name="packagesToScan" value="com.hypersocket.**, com.logonbox.**" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
				<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
				<prop key="hibernate.connection.charSet">UTF-8</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.id.new_generator_mappings">false</prop>
				
				<!-- https://hibernate.atlassian.net/browse/HHH-9106 -->
				<prop key="hibernate.event.merge.entity_copy_observer">allow</prop>
	
				<!-- Hibernate 2nd Level Configuration -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_minimal_puts">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.default_cache_concurrency_strategy">read-write</prop>
				<!-- 
					<prop key="hibernate.cache.region.factory_class">THIS REQUIRED PROPERTY FOR CACHING IS CONFIGURED IN HypersocketAnnotationSessionFactoryBean</prop>
					<prop key="hibernate.id.new_generator_mappings">THIS REQUIRED PROPERTY FOR SEQUENCE GENERATOR STRATEGY FOR LEGACY NAD NEW DB IS CONFIGURED IN HypersocketAnnotationSessionFactoryBean</prop> 
				-->

				<!-- In HA, in case you need override not to happen please set following property to false
				 hypersocket.hibernate.search.ha, in this case all properties in this file will take effect,
				 no auto configuration will take place, listeners will be registered though, i.e
				 hibernate.search.autoregister_listeners will be true
				-->

				<!-- In HA both these properties will be overridden by elastic search properties and
				hibernate.search.autoregister_listeners will be set to false -->
				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">conf/lucene/indexes</prop>

				<prop key="hypersocket.hibernate.search.ha">false</prop>

				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.order_inserts">true</prop>
				<prop key="hibernate.order_updates">true</prop>
				
				<!--
				HA will auto configure below properties with values as below.

				<prop key="hibernate.search.default.indexmanager">elasticsearch</prop>
				<prop key="hibernate.search.default.elasticsearch.host">From database default https://127.0.0.1:9200</prop>
				<prop key="hibernate.search.default.elasticsearch.index_schema_management_strategy">MERGE</prop>
				<prop key="hibernate.search.default.elasticsearch.index_management_wait_timeout">10000</prop>
				<prop key="hibernate.search.default.elasticsearch.required_index_status">yellow</prop>
				<prop key="hibernate.search.default.elasticsearch.refresh_after_write">false</prop>-->
			</props>
		</property>
	</bean>
</beans>
