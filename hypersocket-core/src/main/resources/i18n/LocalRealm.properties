# Provider information
realm.local.label=Local Database

local.accounts=All Local Accounts
all.accounts=All Accounts

#Properties
local.security.label=Security
local.userDetails.label=Details
local.userDetailsE.label=Details
local.groupDetailsE.label=Details
local.userStatus.label=Status
local.userContacts.label=Additional Contacts

user.name=Username
user.name.info=The logon name for this user.

email=Email
email.info=The user's email address.
secondaryEmail=Other Email
secondaryEmail.info=An alternative email address.
secondaryMobile=Other Mobile Phone
secondaryMobile.info=An alternative mobile phone number.
guid=GUID
guid.info=Globally Unique Identifier
uuid=UUID
uuid.info=Universally Unique Identifier

description=Description
description.info=The user's description.
mobile=Mobile
mobile.info=The user's mobile telephone number.

user.description=Description
user.description.info=The user's description.

user.email=Email
user.email.info=The user's email address.

user.mobile=Mobile
user.mobile.info=The user's mobile telephone number.

local.description=Fullname
local.description.info=The user's full name.

local.email=Email
local.email.info=The user's email address.

local.mobile=Mobile
local.mobile.info=The user's mobile telephone number.

expires=Expires
expires.info=The date this account expires.

password.encoding=Password Encoding
password.encoding.info=The type of password encoding used on user's passwords. If this is changed after realm creation users passwords will change to the new encoding next time they change their password.

password.onChangePromptCurrent=Require current password for change password
password.onChangePromptCurrent.info=When user is changing password should user be asked to enter current password along with new password.

#errors
error.principalExists=A user with the name {0} already exists!
error.creatingPassword=A critical error occurred creating password for {0}. {1}
error.createFailed=Failed to create {0}. {1}
error.updateFailed=Failed to update {0}. {1}

event.userCreated=User Created
event.userCreated.success={attr.principalName} created the user {attr.user}.
event.userCreated.failure={attr.principalName} failed to create the user {attr.user}.

error.groupContainsSelf=Group {0} contains its parent group!
error.userExists=The user {0} already exists!
